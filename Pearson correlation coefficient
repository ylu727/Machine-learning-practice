import numpy as np
import matplotlib.pyplot as plt

# input x variables and y variables 
x_variable = np.array([1, 2, 3, 4, 5])
y_variable = np.array([-3, -2, 0, 1, 2])
r_value = np.corrcoef(x_variable, y_variable)

print(r_value)
# the correlation coefficient between y and x is 0.99. They are positively correlated.

# create a list of random values, seed number is 10.
random_value = np.random.RandomState(10)
x_random = random_value.uniform(0,1,200) # select 200 x values from the uniform distribution of the list of random values
x_random = np.vstack((x_random,x_random**2))
x_random = np.vstack((x_random,-x_random**2))
x_random = np.vstack((x_random,random_value.normal(1,4,200)))

r_value = np.corrcoef(x_random)

#visualize the Pearson's correlation coefficient results. 
fig, ax = plt.subplots(nrows=1, ncols=3, figsize=(15, 4))
for i in [0,1,2]:
    ax[i].scatter(x[0,],x[1+i,])
    ax[i].title.set_text('Correlation = ' + "{:.2f}".format(rho[0,i+1]))
    ax[i].set(xlabel='x',ylabel='y')
fig.subplots_adjust(wspace=.4)    
plt.show()

fig, ax = plt.subplots(nrows=2, ncols=4, figsize=(15, 8))

for noise, i in zip([0.05,0.2,0.5,1],[0,1,2,3]): # noise = 0.05, 0.2, 0.5, 1
    x_noise = x_random + random_value.normal(0,noise,x_random.shape)
    r_noise = np.corrcoef(x_noise)
    
    # visulaize correlation with different noises
    ax[0,i].scatter(x_noise[0,],x_noise[1,],color='green')
    ax[1,i].scatter(x_noise[0,],x_noise[2,],color='pink')
    ax[0,i].title.set_text('Correlation coefficient = ' + "{:.2f}".format(r_noise[0,1])
                        + '\n Noise = ' + "{:.2f}".format(noise) )
    ax[1,i].title.set_text('Correlation coefficient = ' + "{:.2f}".format(r_noise[0,2])
                        + '\n Noise = ' + "{:.2f}".format(noise))
    ax[0,i].set(xlabel='x',ylabel='y')    
    ax[1,i].set(xlabel='x',ylabel='y')
    
fig.subplots_adjust(wspace=0.3,hspace=0.4)    
plt.show()
